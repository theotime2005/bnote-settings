name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm install

      - name: Build project and determine if prerelease
        id: prerelease
        run: |
          npm run build
          npm run build:all -- --publish never
          if [[ "${GITHUB_REF##*/}" == *"beta"* || "${GITHUB_REF##*/}" == *"alpha"* ]]; then
            echo "prerelease=true" >> $GITHUB_ENV
          else
            echo "prerelease=false" >> $GITHUB_ENV
          fi

      - name: Generate Release Notes
        id: generate_notes
        run: |
          # Extract the last tag and generate the commit logs since the last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 || git describe --tags --abbrev=0)
          echo "Last tag: $LAST_TAG"
          RELEASE_NOTES=$(git log $LAST_TAG..HEAD --oneline --no-merges)
          echo "Release notes: $RELEASE_NOTES"
          echo "release_body=$RELEASE_NOTES" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ env.prerelease }}
          body: ${{ env.release_body }}

      - name: Upload Mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/build/bnote-settings-mac.dmg
          asset_name: bnote-settings-mac-${{ github.ref }}.dmg
          asset_content_type: application/octet-stream

      - name: Upload Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/build/bnote-settings-win.exe
          asset_name: bnote-settings-win-${{ github.ref }}.exe
          asset_content_type: application/octet-stream
